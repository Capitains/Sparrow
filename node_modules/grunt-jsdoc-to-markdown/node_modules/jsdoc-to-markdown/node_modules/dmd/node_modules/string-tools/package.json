{
  "name": "string-tools",
  "author": {
    "name": "Lloyd Brookes",
    "email": "75pound@gmail.com"
  },
  "version": "0.1.5",
  "description": "Some useful functions for working with strings",
  "repository": {
    "type": "git",
    "url": "https://github.com/75lb/string-tools.git"
  },
  "main": "./lib/string-tools.js",
  "keywords": [
    "string",
    "fill",
    "pad",
    "escape",
    "regex",
    "repeat"
  ],
  "scripts": {
    "test": "tape test/*.js",
    "lint": "jshint lib/*.js test/*.js; echo",
    "docs": "jsdoc2md --index --skip-heading -t jsdoc2md/README.hbs lib/*.js > README.md; echo"
  },
  "devDependencies": {
    "jsdoc-to-markdown": "^0.2.15",
    "tape": "^2.13.2"
  },
  "readme": "[![view on npm](http://img.shields.io/npm/v/string-tools.svg)](https://www.npmjs.org/package/string-tools)\n[![npm module downloads per month](http://img.shields.io/npm/dm/string-tools.svg)](https://www.npmjs.org/package/string-tools)\n[![Build Status](https://travis-ci.org/75lb/string-tools.svg?branch=master)](https://travis-ci.org/75lb/string-tools)\n[![Dependency Status](https://david-dm.org/75lb/string-tools.svg)](https://david-dm.org/75lb/string-tools)\n\n#string-tools\nSome useful functions for working with strings.\n\n##Install\n```sh\n$ npm install string-tools --save\n```\n\n#API Reference\n<a name=\"module_string-tools\"></a>\n\n  \n**Example**  \n```js\nvar s = require(\"string-tools\");\n```\n**Symbols**  \n  * [s.symbol](#module_string-tools.symbol)\n  * [s.escapeRegExp()](#module_string-tools.escapeRegExp)\n  * [s.fill(fillWith, len)](#module_string-tools.fill)\n  * [s.padRight(input, width, [padWith])](#module_string-tools.padRight)\n  * [s.repeat(input, times)](#module_string-tools.repeat)\n  * [s.clipLeft(input, width, [prefix])](#module_string-tools.clipLeft)\n\n<a name=\"module_string-tools.symbol\"></a>\n###s.symbol\nsome cross platform symbols (`tick` and `cross`)\n\n  \n<a name=\"module_string-tools.escapeRegExp\"></a>\n###s.escapeRegExp()\nescape special regular expression characters\n\n**Example**  \n```js\n> w.escapeRegExp(\"(.*)\");\n'\\\\(\\\\.\\\\*\\\\)'\n```\n<a name=\"module_string-tools.fill\"></a>\n###s.fill(fillWith, len)\nCreate a new string filled with the supplied character\n\n**Params**\n\n- fillWith `string` - the fill character\n- len `number` - the length of the output string\n\n**Returns**: `string`  \n**Example**  \n```js\n> w.fill(\"a\", 10)\n'aaaaaaaaaa'\n> w.fill(\"ab\", 10)\n'aaaaaaaaaa'\n```\n<a name=\"module_string-tools.padRight\"></a>\n###s.padRight(input, width, [padWith])\nAdd padding to the right of a string\n\n**Params**\n\n- input `string` - the string to pad\n- width `number` - the desired final width\n- [padWith=&quot; &quot;] `string` - the padding character\n\n**Returns**: `string`  \n**Example**  \n```js\n> w.padRight(\"clive\", 1)\n'clive'\n> w.padRight(\"clive\", 1, \"-\")\n'clive'\n> w.padRight(\"clive\", 10, \"-\")\n'clive-----'\n```\n<a name=\"module_string-tools.repeat\"></a>\n###s.repeat(input, times)\nreturns the input string repeated the specified number of times\n\n**Params**\n\n- input `string` - input string to repeat\n- times `number` - the number of times to repeat\n\n**Returns**: `string`  \n<a name=\"module_string-tools.clipLeft\"></a>\n###s.clipLeft(input, width, [prefix])\nreturns the input string clipped from the left side in order to meet the specified `width`\n\n**Params**\n\n- input `string` - input string to repeat\n- width `number` - the desired final width\n- [prefix=...] `string` - the prefix to replace the clipped region\n\n**Returns**: `string`  \n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/75lb/string-tools/issues"
  },
  "_id": "string-tools@0.1.5",
  "_from": "string-tools@~0.1.5"
}
