{
  "name": "jsdoc-parse",
  "author": {
    "name": "Lloyd Brookes",
    "email": "75pound@gmail.com"
  },
  "version": "0.2.11",
  "description": "Documented javascript source files in, doclet data out.",
  "repository": {
    "type": "git",
    "url": "https://github.com/75lb/jsdoc-parse.git"
  },
  "main": "lib/jsdoc-parse.js",
  "bin": {
    "jsdoc-parse": "bin/cli.js"
  },
  "keywords": [],
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "tape test/*.js",
    "lint": "jshint lib/*.js bin/*.js test/*.js; echo",
    "docs": "jsdoc2md -t jsdoc2md/README.hbs lib/jsdoc-parse.js > README.md; echo"
  },
  "dependencies": {
    "array-tools": "^1.1.5",
    "file-set": "~0.2.1",
    "jsdoc": "git+https://github.com/jsdoc3/jsdoc#b5653b838ce7b96f97322c77e65f74c3086bd3d1",
    "more-fs": "~0.5.0",
    "object-tools": "^1.1.1",
    "typical": "^1.0.0"
  },
  "devDependencies": {
    "tape": "^2.13.3"
  },
  "readme": "[![view on npm](http://img.shields.io/npm/v/jsdoc-parse.svg)](https://www.npmjs.org/package/jsdoc-parse)\n[![npm module downloads per month](http://img.shields.io/npm/dm/jsdoc-parse.svg)](https://www.npmjs.org/package/jsdoc-parse)\n[![Build Status](https://travis-ci.org/75lb/jsdoc-parse.svg?branch=master)](https://travis-ci.org/75lb/jsdoc-parse)\n[![Dependency Status](https://david-dm.org/75lb/jsdoc-parse.svg)](https://david-dm.org/75lb/jsdoc-parse)\n\n#jsdoc-parse\nJsdoc-annotated javascript source files in, [dmd](https://github.com/75lb/dmd) input data out. \n\n##Compatible Platforms\nTested on Mac OSX, Linux, Windows 8.1 and Windows XP. \n\n##As a command-line tool\nUseful for quick access to the data.. \n\n###Install\n```sh\n$ npm install -g jsdoc-parse\n```\n\n###Usage\n```\n$ jsdoc-parse <src_files>\n$ cat <src_files> | jsdoc-parse \n```\n\n***Usage form 2 edge case warning***: `jsdoc-parse` will intepret whatever is piped in as a single file, so take care not to pipe in input containing multipe @modules as this is illegal in jsdoc (see [here](http://usejsdoc.org/tags-module.html)):\n\n> The @module tag marks the current file as being its own module. All symbols in the file are assumed to be members of the module unless documented otherwise.\n\n###Example\n```sh\n$ echo \"/** a wonderful global */ var majestic = true;\" | jsdoc-parse\n[\n  {\n    \"description\": \"a wonderful global\",\n    \"name\": \"majestic\",\n    \"longname\": \"majestic\",\n    \"kind\": \"member\",\n    \"scope\": \"global\"\n  }\n]\n```\n\n##As a library\nFor use within node.js. \n\n###Install\n```sh\n$ npm install jsdoc-parse --save\n```\n\n###API Reference\nExports a single function (`parse`) to parse jsdoc data.\n\n**Example**  \n```js\nvar parse = require(\"jsdoc-parse\");\n```\n\n<a name=\"exp_module_jsdoc-parse\"></a>\n####parse(src, options) ‚èè\nDocumented javascript source files in, doclet data out.\n\n**Params**\n\n- src `string` | `Array.<string>` - source file(s) to parse  \n- options `object` - options  \n  - \\[stats\\] `boolean` - Return stats about the doclets parsed  \n  - \\[private\\] `boolean` - include @private members in the output  \n\n**Returns**: `Stream` - a readable stream containing the parsed json data  \n**Example**  \nCode like this: \n```js\nparse(\"lib/jsdoc-parse.js\").pipe(process.stdout);\n```\n\nwould output something like: \n```json\n[\n  {\n    \"description\": \"Exports a single function (`parse`) to parse jsdoc data.\",\n    \"kind\": \"module\",\n    \"name\": \"jsdoc-parse\",\n    \"examples\": [\n      \"```js\\nvar parse = require(\\\"jsdoc-parse\\\");\\n```\"\n    ],\n    \"longname\": \"module:jsdoc-parse\"\n  },\n  etc,\n  etc\n]\n```\n\n\n\n\n*documented by [jsdoc-to-markdown](https://github.com/75lb/jsdoc-to-markdown)*\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/75lb/jsdoc-parse/issues"
  },
  "_id": "jsdoc-parse@0.2.11",
  "_from": "jsdoc-parse@~0.2.7"
}
