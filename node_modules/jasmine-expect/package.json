{
  "name": "jasmine-expect",
  "version": "1.22.3",
  "description": "Additional matchers for the Jasmine BDD JavaScript testing library",
  "main": "index.js",
  "author": {
    "name": "Jamie Mason",
    "email": "siunmaru@gmail.com"
  },
  "license": "MIT",
  "contributors": [
    {
      "name": "Jamie Mason",
      "url": "https://github.com/JamieMason"
    },
    {
      "name": "David Tanner",
      "url": "https://github.com/DavidTanner"
    }
  ],
  "devDependencies": {
    "grunt": "0.4.5",
    "grunt-contrib-concat": "0.5.0",
    "grunt-contrib-watch": "0.6.1",
    "karma": "0.12.30",
    "karma-chrome-launcher": "0.1.7",
    "karma-coverage": "0.2.7",
    "karma-firefox-launcher": "0.1.4",
    "karma-jasmine": "0.3.3",
    "karma-phantomjs-launcher": "0.1.4",
    "karma-script-launcher": "0.1.0"
  },
  "scripts": {
    "test": "./node_modules/karma/bin/karma start --single-run --browsers PhantomJS"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/JamieMason/Jasmine-Matchers.git"
  },
  "keywords": [
    "jasmine",
    "BDD",
    "TDD",
    "testing"
  ],
  "bugs": {
    "url": "https://github.com/JamieMason/Jasmine-Matchers/issues"
  },
  "readme": "# Jasmine-Matchers\n\n```bash\nnpm install jasmine-expect --save-dev\n```\n\n> If you have some useful matchers of your own, please add them via [Pull Request](https://github.com/JamieMason/Jasmine-Matchers/pull/new/master).\n\nThe [Jasmine testing framework](http://pivotal.github.com/jasmine/) from [Pivotal Labs](http://pivotallabs.com/) comes with this [default set of matchers](https://github.com/pivotal/jasmine/wiki/Matchers);\n\n```javascript\nexpect(fn).toThrow(e);\nexpect(instance).toBe(instance);\nexpect(mixed).toBeDefined();\nexpect(mixed).toBeFalsy();\nexpect(number).toBeGreaterThan(number);\nexpect(number).toBeLessThan(number);\nexpect(mixed).toBeNull();\nexpect(mixed).toBeTruthy();\nexpect(mixed).toBeUndefined();\nexpect(array).toContain(member);\nexpect(string).toContain(substring);\nexpect(mixed).toEqual(mixed);\nexpect(mixed).toMatch(pattern);\n```\n\nAll [Jasmine-Matchers](https://github.com/JamieMason/Jasmine-Matchers) does is add a few more;\n\n## Arrays\n\n```javascript\nexpect(array).toBeArray();\nexpect(array).toBeArrayOfBooleans();\nexpect(array).toBeArrayOfNumbers();\nexpect(array).toBeArrayOfObjects();\nexpect(array).toBeArrayOfSize(size);\nexpect(array).toBeArrayOfStrings();\nexpect(array).toBeEmptyArray();\nexpect(array).toBeNonEmptyArray();\n```\n\n## Booleans\n\n```javascript\nexpect(boolean).toBeBoolean();\nexpect(boolean).toBeFalse();\nexpect(boolean).toBeTrue();\n```\n\n## Browser\n\n```javascript\nexpect(element).toBeHtmlCommentNode();\nexpect(element).toBeHtmlNode();\nexpect(element).toBeHtmlTextNode();\nexpect(object).toBeDocument();\nexpect(object).toBeWindow();\n```\n\n## Exceptions\n\n```javascript\nexpect(fn).toThrowAnyError();\nexpect(fn).toThrowErrorOfType(string);\n```\n\n## Numbers\n\n```javascript\nexpect(number).toBeEvenNumber();\nexpect(number).toBeNumber();\nexpect(number).toBeOddNumber();\nexpect(number).toBeWholeNumber();\nexpect(number).toBeWithinRange(floor, ceiling);\nexpect(numberOrString).toBeCalculable();\n```\n\n## Objects\n\n```javascript\nexpect(object).toBeFunction();\nexpect(object).toBeObject();\nexpect(object).toHaveArray(memberName);\nexpect(object).toHaveArrayOfBooleans(memberName);\nexpect(object).toHaveArrayOfNumbers(memberName);\nexpect(object).toHaveArrayOfObjects(memberName);\nexpect(object).toHaveArrayOfSize(memberName, size);\nexpect(object).toHaveArrayOfStrings(memberName);\nexpect(object).toHaveEmptyArray(memberName);\nexpect(object).toHaveNonEmptyArray(memberName);\nexpect(object).toImplement(api);\n```\n\n## Strings\n\n```javascript\nexpect(string).toBeEmptyString();\nexpect(string).toBeHtmlString();\nexpect(string).toBeJsonString();\nexpect(string).toBeLongerThan(other);\nexpect(string).toBeNonEmptyString();\nexpect(string).toBeSameLengthAs(other);\nexpect(string).toBeShorterThan(other);\nexpect(string).toBeString();\nexpect(string).toBeWhitespace();\nexpect(string).toEndWith(expected);\nexpect(string).toStartWith(expected);\n```\n\n## Dates\n\n```javascript\nexpect(date).toBeAfter(date);\nexpect(date).toBeBefore(date);\nexpect(date).toBeDate();\nexpect(string).toBeIso8601();\n```\n\n## Usage\n\nJust include a reference to dist/jasmine-matchers.js after your reference to Jasmine, or use `require('jasmine-expect')`.\n",
  "readmeFilename": "README.md",
  "_id": "jasmine-expect@1.22.3",
  "dist": {
    "shasum": "7f502221940d6a2a4a02489c5e0713eddecf8146"
  },
  "_from": "jasmine-expect@~1",
  "_resolved": "https://registry.npmjs.org/jasmine-expect/-/jasmine-expect-1.22.3.tgz"
}
